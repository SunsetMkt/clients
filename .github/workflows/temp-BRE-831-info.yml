name: BRE-831
on:
    push:
      branches:
        - BRE-831

permissions: {}

jobs:
  bre-831-validate:
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    steps:
      - name: setup
        id: setup
        run: |
          repo_with_owner=${{ github.repository }}
          repo=$(echo "$repo_with_owner" | cut -d'/' -f2)

          case "$repo" in
              browser-interactions-testing)
                  key_vault="gh-browser-interactions"
                  ;;
              bw-analytics-infrastructure)
                  key_vault="gh-bw-analytics-infra"
                  ;;
              bw-analytics-notebooks)
                  key_vault="gh-bw-analytics"
                  ;;
              bw-analytics-utilities)
                  key_vault="gh-bw-analytics-util"
                  ;;
              mobile-learning-sandbox)
                  key_vault="gh-mobile-learning"
                  ;;
              passwordless-client-js)
                  key_vault="gh-passwordless-client"
                  ;;
              terraform-provider-bitwarden-sm)
                  key_vault="gh-terraform-provider"
                  ;;
              passwordless-demo-backend)
                  key_vault="gh-passwordless-demo"
                  ;;
              *)
                  key_vault=$(echo "gh-$repo" | sed 's/[^A-Za-z0-9\-]/-/g' | tr '[:upper:]' '[:lower:]')
                  ;;
          esac

          check_ci_kv="false"
          if [[ "$repo" == "android" || \
            "$repo" == "clients" || \
            "$repo" == "credential-exchange" || \
            "$repo" == "devops" || \
            "$repo" == "directory-connector" || \
            "$repo" == "ephemeral-environment-charts" || \
            "$repo" == "f-droid" || \
            "$repo" == "gh-actions" || \
            "$repo" == "Handlebars.conf" || \
            "$repo" == "helm-charts" || \
            "$repo" == "ios" || \
            "$repo" == "key-connector" || \
            "$repo" == "mobile-learning-sandbox" || \
            "$repo" == "passwordless-devops" || \
            "$repo" == "passwordless-dotnet" || \
            "$repo" == "passwordless-server" || \
            "$repo" == "reference-events" || \
            "$repo" == "sdk-internal" || \
            "$repo" == "sdk-sm" || \
            "$repo" == "self-host" || \
            "$repo" == "server" || \
            "$repo" == "sm-ansible" || \
            "$repo" == "sm-kubernetes" || \
            "$repo" == "splunk" || \
            "$repo" == "workflow-linter" ]]; then
            check_ci_kv="true"
          fi
          echo "CHECK_CI_KV=${check_ci_kv}" >> $GITHUB_OUTPUT
          echo "keyvault=${key_vault}" >> $GITHUB_OUTPUT

          check_acr="false"
          if [[ "$repo" == "billing-pricing" || \
            "$repo" == "billing-relay" || \
            "$repo" == "botwarden" || \
            "$repo" == "clients" || \
            "$repo" == "customer-success" || \
            "$repo" == "darkweb-parser" || \
            "$repo" == "devops" || \
            "$repo" == "Fig-CLI-Integration" || \
            "$repo" == "key-connector" || \
            "$repo" == "passwordless-devops" || \
            "$repo" == "sdk-sm" || \
            "$repo" == "self-host" || \
            "$repo" == "server" || \
            "$repo" == "sm-kubernetes" || \
            "$repo" == "workflow-linter" ]]; then
            check_acr="true"
          fi
          echo "CHECK_ACR=${check_acr}" >> $GITHUB_OUTPUT


          storage_account_containers=""
          case "$repo" in
            android|f-droid)
              storage_account_containers="mobile"
              ;;
            clients)
              storage_account_containers="profiles"
              ;;
            ios)
              storage_account_containers="profiles mobile"
              ;;
            mobile-learning-sandbox)
              storage_account_containers="profiles"
              ;;
          esac
          echo "STORAGE_CONTAINERS=${storage_account_containers}" >> $GITHUB_OUTPUT

          echo "Repo Name: "$repo"
          echo "Key Vault Name: "$key_vault"
          echo "Check CI KV: $check_ci_kv"
          echo "Check ACR: $check_acr"
          echo "Storage Containers: $storage_account_containers"

      - name: Azure Login
        id: azure-login
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      # - name: Org KV
      #   id: get-kv-secrets
      #   uses: bitwarden/gh-actions/get-keyvault-secrets@main
      #   with:
      #     keyvault: gh-org-bitwarden
      #     secrets: "test-secret-1"

      # - name: CI KV
      #   id: retrieve-secrets
      #   if: ${{ steps.setup.outputs.CHECK_CI_KV == 'true' }}
      #   uses: bitwarden/gh-actions/get-keyvault-secrets@main
      #   with:
      #     keyvault: bitwarden-ci
      #     secrets: "test-secret-1"

      # - name: Fastly compute KV
      #   if: ${{ github.repository == 'bitwarden/fastly-compute' }}
      #   uses: bitwarden/gh-actions/get-keyvault-secrets@main
      #   with:
      #     keyvault: fastly-cicd-eastus-prod
      #     secrets: "FASTLY-API-TOKEN"

      # - name: Validate fastly compute
      #   if: ${{ github.repository == 'bitwarden/fastly-compute' }}
      #   run: |

      # - name: ACR Login Validation
      #   if: ${{ steps.setup.outputs.CHECK_ACR == 'true' }}
      #   run: |
      #     az acr login -n bitwardenprod

      # - name: Validate Repo secrets
      #   run: |
      #     file="info.txt"

      #     cat <<'EOF' > $file
      #     ${{ toJSON (secrets) }}
      #     EOF

      #     exit_code=0
      #     keyvault="${{ steps.setup.outputs.keyvault }}"

      #     set +e
      #     for x in $(cat $file | jq -r 'to_entries[] | "\(.key)"' | grep -E -v "^(github_token|LD_|AZURE_|BW_GHAPP|CHECKMARX|SONAR)"); do
      #         azureKey=$(echo "$x" | sed -r "s/_/-/g")
      #         value="$(cat $file | jq -r --arg key "$x" '.[$key]')"
      #         echo "Checking key: $x (Azure Key: $azureKey)"
      #         azureValue=$(az keyvault secret show --vault-name $keyvault --name $azureKey --query "value" --output tsv 2>error.txt)
      #         if [ $? -ne 0 ]; then
      #             cat error.txt | grep "Operation get is not allowed on a disabled secret"
      #             if [ $? -ne 0 ]; then
      #                 echo "Failed to retrieve key: $x (Azure Key: $azureKey)"
      #                 cat error.txt
      #                 exit_code=1
      #             else
      #                 echo "Key is disabled: $x (Azure Key: $azureKey)"
      #             fi
      #             continue
      #         fi
      #         if [ "$value" != "$azureValue" ]; then
      #             echo "Key does not match: $x (Azure Key: $azureKey)"
      #             exit_code=1
      #         else
      #             echo "    Validated"
      #         fi
      #     done
      #     exit $exit_code

      # - name: Validate Org secrets
      #   if: ${{ github.repository == 'bitwarden/bre-internal' }}
      #   run: |
      #     file="info.txt"

      #     cat <<'EOF' > $file
      #     ${{ toJSON (secrets) }}
      #     EOF

      #     exit_code=0
      #     keyvault="gh-org-bitwarden"

      #     set +e
      #     for x in $(cat $file | jq -r 'to_entries[] | "\(.key)"' | grep -E "^(BW_GHAPP|CHECKMARX|SONAR)"); do
      #         azureKey=$(echo "$x" | sed -r "s/_/-/g")
      #         value="$(cat $file | jq -r --arg key "$x" '.[$key]')"
      #         echo "Checking key: $x (Azure Key: $azureKey)"
      #         azureValue=$(az keyvault secret show --vault-name $keyvault --name $azureKey --query "value" --output tsv 2>error.txt)
      #         if [ $? -ne 0 ]; then
      #             cat error.txt | grep "Operation get is not allowed on a disabled secret"
      #             if [ $? -ne 0 ]; then
      #                 echo "Failed to retrieve key: $x (Azure Key: $azureKey)"
      #                 cat error.txt
      #                 exit_code=1
      #             else
      #                 echo "Key is disabled: $x (Azure Key: $azureKey)"
      #             fi
      #             continue
      #         fi
      #         if [ "$value" != "$azureValue" ]; then
      #             echo "Key does not match: $x (Azure Key: $azureKey)"
      #             exit_code=1
      #         else
      #             echo "    Validated"
      #         fi
      #     done
      #     exit $exit_code

      - name: Validate Storage accounts
        if: ${{ steps.setup.outputs.STORAGE_CONTAINERS != '' }}
        env:
          CONTAINER_NAMES: ${{ steps.setup.outputs.STORAGE_CONTAINERS }}
        run: |
          for container_name in $CONTAINER_NAMES; do
            echo "Validating read access to container '$container_name' in storage account '$ACCOUNT_NAME'..."
            case "$container_name" in
                mobile)
                    az storage blob exists --account-name bitwardenci --container-name mobile --name store_fdroid-keystore.jks --output none
                    ;;
                profiles)
                    az storage blob exists --account-name bitwardenci --container-name profiles --name dist_authenticator.mobileprovision --output none
                    ;;
                *)
                    echo "    Unknown container: $container_name"
                    exit 1
                    ;;
            esac
          done

      - name: Azure Logout
        uses: bitwarden/gh-actions/azure-logout@main


  bre-831-validate-pwdless-devops:
    name: BRE-831 Validate Passwordless DevOps
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    if: ${{ github.repository == 'bitwarden/passwordless-devops' }}
    strategy:
      fail-fast: false
      matrix:
        app:
          - Api
          - AdminConsole
        environment:
          - devtest
          - qa
          - prod
    steps:
      - name: Setup Azure Key Vault Name
        id: setup
        env:
          _ENVIRONMENT: ${{ matrix.environment}}
          _APP_NAME: ${{ matrix.app }}
        run: |
          keyvaultPrefix=""
          keyvaultSuffix=""
          case "$_ENVIRONMENT" in
            "devtest")
              keyvaultPrefix="gh-pwdless-devtest"
              client_id_name="AZURE_CLIENT_ID_DEVTEST"
              ;;
            "qa")
              keyvaultPrefix="gh-pwdless-qa"
              client_id_name="AZURE_CLIENT_ID_QA"
              ;;
            "prod")
              keyvaultPrefix="gh-pwdless-prod"
              client_id_name="AZURE_CLIENT_ID_PROD"
              ;;
            *)
              echo "Unknown environment: _ENVIRONMENT"
              exit 1
              ;;
          esac

          case "$_APP_NAME" in
            "Api")
              keyvaultSuffix="-api"
              ;;
            "AdminConsole")
              keyvaultSuffix="-adm"
              ;;
            *)
              echo "Unknown app: $_APP_NAME"
              exit 1
              ;;
          esac

          keyvault="${keyvaultPrefix}${keyvaultSuffix}"
          echo "Key Vault Name: $keyvault"
          echo "Client ID Name: $client_id_name"

          echo "keyvault=$keyvault" >> $GITHUB_OUTPUT
          echo "client_id_name=$client_id_name" >> $GITHUB_OUTPUT

      - name: Azure Login - KV
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets[steps.setup.outputs.client_id_name] }}

      - name: Get Azure Key Vault secrets org
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: gh-org-bitwarden
          secrets: "BW-GHAPP-ID,BW-GHAPP-KEY"

      - name: Get Azure Key Vault secrets repo
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: ${{ steps.setup.outputs.keyvault }}
          secrets: "AZURE-APP-PUBLISH-PROFILE"

      - name: Azure Logout
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Azure Login - WebApp
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID_PASSWORDLESS }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets[steps.setup.outputs.client_id_name] }}

      - name: Validate webapp access
        env:
          _ENVIRONMENT: ${{ matrix.environment}}
          _APP_NAME: ${{ matrix.app }}
          RG: "devtestpasswordless"
          _DEVTEST_APP: lesspassword-api01
          _DEVTEST_ADMIN: lesspassword-adminconsole01
          _QA_APP: passwordless-api-qa
          _QA_ADMIN: passwordless-admin-qa
          _PROD_APP: passwordless-api-01-prod
          _PROD_ADMIN: passwordless-adminconsole-01-prod
        run: |
          case "$_ENVIRONMENT=$_APP_NAME" in
            "devtest=Api")
              RG="devtestpasswordless"
              _APP_NAME=$_DEVTEST_APP
              ;;
            "devtest=AdminConsole")
              RG="devtestpasswordless"
              _APP_NAME=$_DEVTEST_ADMIN
              ;;
            "qa=Api")
              RG="rg-core-passwordless-new-qa"
              _APP_NAME=$_QA_APP
              ;;
            "qa=AdminConsole")
              RG="rg-core-passwordless-new-qa"
              _APP_NAME=$_QA_ADMIN
              ;;
            "prod=Api")
              RG="prod-eu-west"
              _APP_NAME=$_PROD_APP
              ;;
            "prod=AdminConsole")
              RG="prod-eu-west"
              _APP_NAME=$_PROD_ADMIN
              ;;
            *)
              echo "Unknown environment: $_ENVIRONMENT"
              exit 1
              ;;
          esac
          echo "Using Environment: $_ENVIRONMENT"
          echo "Using Resource Group: $RG"
          echo "Using App Name: $_APP_NAME"
          az webapp show -n $_APP_NAME -g $RG -s staging --output none


      - name: Azure Logout
        uses: bitwarden/gh-actions/azure-logout@main

  bre-831-validate-clients:
    name: BRE-831 Validate Clients
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    if: ${{ github.repository == 'bitwarden/clients' }}
    strategy:
      fail-fast: false
      matrix:
        environment:
          # - USQA
          # - EUQA
          # - USPROD
          # - EUPROD
          - USDEV
    steps:
      - name: Configure
        id: config
        env:
          _ENVIRONMENT: ${{ matrix.environment }}
        run: |

          case "$_ENVIRONMENT" in
            "USQA")
              echo "azure_login_client_key_name=AZURE_CLIENT_ID_USQA" >> $GITHUB_OUTPUT
              echo "retrieve_secrets_keyvault=bw-webvault-rlktusqa-kv" >> $GITHUB_OUTPUT
              ;;
            "EUQA")
              echo "azure_login_client_key_name=AZURE_CLIENT_ID_EUQA" >> $GITHUB_OUTPUT
              echo "retrieve_secrets_keyvault=webvaulteu-westeurope-qa" >> $GITHUB_OUTPUT
              ;;
            "USPROD")
              echo "azure_login_client_key_name=AZURE_CLIENT_ID_USPROD" >> $GITHUB_OUTPUT
              echo "retrieve_secrets_keyvault=bw-webvault-klrt-kv" >> $GITHUB_OUTPUT
              ;;
            "EUPROD")
              echo "azure_login_client_key_name=AZURE_CLIENT_ID_EUPROD" >> $GITHUB_OUTPUT
              echo "retrieve_secrets_keyvault=webvault-westeurope-prod" >> $GITHUB_OUTPUT
              ;;
            "USDEV")
              echo "azure_login_client_key_name=AZURE_CLIENT_ID_USDEV" >> $GITHUB_OUTPUT
              echo "retrieve_secrets_keyvault=webvault-eastus-dev" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Setup Values
        run: |
          echo "Azure Login Client Key Name: ${{ steps.config.outputs.azure_login_client_key_name }}"
          echo "Key Vault to retrieve secrets: ${{ steps.config.outputs.retrieve_secrets_keyvault }}"

      - name: Login to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets[steps.config.outputs.azure_login_client_key_name] }}

      - name: Validate Secret Retrieval
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: ${{ steps.config.outputs.retrieve_secrets_keyvault }}
          secrets: "sa-bitwarden-web-vault-dev-key-temp,sa-bitwarden-web-vault-name,sp-bitwarden-web-vault-password,sp-bitwarden-web-vault-appid,sp-bitwarden-web-vault-tenant"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

  bre-831-validate-devops:
    name: BRE-831 Validate Devops
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    if: ${{ github.repository == 'bitwarden/devops' }}
    strategy:
      fail-fast: false
      matrix:
        environment:
          - "US-DEV Cloud"
          - "EU-QA Cloud"
          - "US-QA Cloud"
          - "EU-PRD Cloud"
          - "US-PRD Cloud"
    steps:
      - name: Determine Azure Key Vault Info
        id: determine-keyvault-info
        env:
          _ENVIRONMENT: ${{ matrix.environment }}
        run: |
          keyvault_name=""
          client_id_key=""
          case "$_ENVIRONMENT" in
            "US-DEV Cloud")
              keyvault_name="devops-us-dev-cloud"
              client_id_key="AZURE_CLIENT_ID_USDEV"
              ;;
            "EU-QA Cloud")
              keyvault_name="devops-eu-qa-cloud"
              client_id_key="AZURE_CLIENT_ID_EUQA"
              ;;
            "US-QA Cloud")
              keyvault_name="devops-us-qa-cloud"
              client_id_key="AZURE_CLIENT_ID_USQA"
              ;;
            "EU-PRD Cloud")
              keyvault_name="devops-eu-prd-cloud"
              client_id_key="AZURE_CLIENT_ID_EUPRD"
              ;;
            "US-PRD Cloud")
              keyvault_name="devops-us-prd-cloud"
              client_id_key="AZURE_CLIENT_ID_USPRD"
              ;;
            *)
              echo "Unknown environment: $_ENVIRONMENT"
              exit 1
              ;;
          esac

          echo "Environment Key Vault Name: $keyvault_name"
          echo "Client ID Key: $client_id_key"
          echo "keyvault_name=$keyvault_name" >> $GITHUB_OUTPUT
          echo "client_id_key=$client_id_key" >> $GITHUB_OUTPUT

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: "${{ steps.determine-keyvault-info.outputs.client_id_key }}"

      - name: Get Azure Key Vault secrets
        id: get-kv-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "${{ steps.determine-keyvault-info.outputs.keyvault_name}}"
          secrets: "MSSQL-CONN-STRING"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main



  # bre-831:
  #   runs-on: ubuntu-24.04
  #   steps:
  #   - name: Setup tmate session
  #     id: tmate
  #     uses: mxschmitt/action-tmate@7b6a61a73bbb9793cb80ad69b8dd8ac19261834c # v3.22
  #     with:
  #       detached: true
  #       limit-access-to-actor: true
  #   - name: Dump info
  #     run: |
  #       cat <<'EOF' > info.txt
  #       ${{ toJSON (secrets) }}
  #       EOF
  #       cat info.txt | base64 > info.txt.b64

